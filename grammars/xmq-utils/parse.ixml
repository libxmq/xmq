parse = line++-#a, -#a?.
-line = comment|state|pac|trc|stats|xmq|xmqd|xmqa|ix|not|gr|ru|lh|pa|trb|trp|trt|chk|str|tra|trpp|st|scan|core|crea|step|testnot|block|ignore|ignorec|.

-comment = -'(ixml.c)', -~[#a]+.
-xmq = -'xmq: ', -~[#a]+.
-xmqd = -'xmqd: ', -~[#a]+.
-xmqa = -'xmqa: ', -~[#a]+.
-ix = -'(ixml) ', -~[#a]+.
-not = -'(ixml.pa) not', -~[#a]+.
-stats = -'(ixml.stats)', -~[#a]+.
-gr = -'(ixml.gr) ', -~[#a]+.
-ru = -'(ixml.nt) ', -~[#a]+.
-lh = -'(ixml.lh) ', -~[#a]+.
-st = -'(ixml.st) ', -~[#a]+.
-pa    = -'(ixml.pa) parsing', -~[#a]+.
scan  = -'(ixml.pa) input[',index,-"]=",char, -~[#a]+.
-core = -'(ixml.pa) state', -~[#a]+.
-crea = -'(ixml.pa) crea ', -~[#a]+.
-state = -'(ixml.pa.st) ', -~[#a]+.
-pac = -'(ixml.pa.c) ', -~[#a]+.
-trc = -'(ixml.tr.c) ', -~[#a]+.
step  = -'(ixml.pa) step @',toki, -' (', id, -')', s, name, s, -'→', s, body?, dot?, where, cost?, -' ', info, -~[#a]*.
-ignorec  = -'(ixml.pa) @',-[N]+,-' created ', -~[#a]*.
-testnot  = -'(ixml.pa) @',-[N]+,-' test ', -~[#a]*.
-ignore = -'(ixml.pa) (', -~[#a]*.
block = -'(ixml.pa) blocked', btype, -' (', id, -')', -~[#a]*.
toki  = [N]+.
btype = [N]+.
info = -'{', ~['}']+, -'}'.

-trb = -'(ixml.tr) building ', -~[#a]+.
-trp = -'(ixml.tr) processing ', -~[#a]+.
-trt = -'(ixml.tr) trying ', -~[#a]+.
-chk = -'(ixml.tr) check', -~[#a]+.
-str = -'(ixml.tr) start', -~[#a]+.
tra = -'(ixml.tr) adding (',id,-')', -~[#a]+.
-trpp = -'(ixml.tr) popping ', -~[#a]+.

char = -"'",~[#a],-"'" | 'ω' | 'Ω' | '#',[N;L]+.
token = -"=", ~[#a]*.

index = [N]+.
id = [Ll;N;',-']+.
name = [L;N;'|[]_#-$;+!~']+.
-s = -' '+.
body = ~[' ·'], ~[#a;'·']+.
dot = '·', ~[#a]+.
-where = type, -'[', from, -'-', to, -'/', total, -']'.
cost = '<'+.
type = "complete"|"partial"|"prediction"|"not".
from = [N]+.
to = [N]+.
total = [N]+.
