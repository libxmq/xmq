name: Release Ubuntu/MacosX/Windows

permissions:
  contents: write

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  job_create_release:
    runs-on: ubuntu-latest
    steps:
      - id: CHECKOUT_SOURCE
        uses: actions/checkout@v3
      - id: CREATE_RELEASE
        uses: shogo82148/actions-create-release@v1
        with:
          body_path: RELEASE
      - id: UPLOAD_CHANGES
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CHANGES
      - id: UPLOAD_DIST_XMQ
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/xmq.*
      - id: UPLOAD_DIST_EXAMPLE
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/example.*
      - id: UPLOAD_DIST_MAKEFILE
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/Makefile
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  job_release_ubuntu:
    needs: [job_create_release]
    runs-on: ubuntu-latest
    steps:
      - id: CHECKOUT_SOURCE
        uses: actions/checkout@v3
      - id: INSTALL_ADDITIONAL_BUILD_DEPENDENCIES
        run: sudo apt install -y eatmydata libtidy-dev libxml2-dev libxslt1-dev
      - id: CONFIGURE
        run: eatmydata ./configure
      - id: MAKE
        run: eatmydata make release
      - id: TEST
        run: eatmydata make test
      - id: CREATE_RELEASE_ARCHIVE
        run: tar czf build/xmq-gnu-linux-release.tar.gz -C build/default/release xmq
      - id: UPLOAD_ASSETS_RELEASE
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ needs.job_create_release.outputs.upload_url }}
          asset_path: build/xmq-gnu-linux-release.tar.gz

  job_release_macosx:
    needs: [job_create_release]
    runs-on: macOS-latest
    steps:
      - id: CHECKOUT_SOURCE
        uses: actions/checkout@v3
      - id: CONFIGURE
        run: ./configure
      - id: MAKE
        run: make release
      - id: TEST
        run: make test
      - id: CREATE_RELEASE_ARCHIVE
        run: tar czf build/xmq-macos-release.tar.gz -C build/default/release xmq
      - id: UPLOAD_ASSETS_RELEASE
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ needs.job_create_release.outputs.upload_url }}
          asset_path: ./build/xmq-macos-release.tar.gz

  job_release_windows:
    needs: [job_create_release]
    runs-on: ubuntu-latest
    steps:
      - id: CHECKOUT_SOURCE
        uses: actions/checkout@v3
      - id: INSTALL_ADDITIONAL_BUILD_DEPENDENCIES
        run: sudo apt install -y eatmydata gcc-mingw-w64 wixl
      - id: FETCH_DEPS
        run: cd 3rdparty; ./fetch_and_build.sh x86_64-w64-mingw32
      - id: CONFIGURE
        run: ./configure --host=x86_64-w64-mingw32 --with-libxml2=3rdparty/libxml2-winapi --with-libxslt=3rdparty/libxslt-winapi --with-zlib=3rdparty/zlib-1.3-winapi
      - id: MAKE
        run: make release
      - id: UPLOAD_ASSETS_RELEASE
        uses: shogo82148/actions-upload-release-asset@v1
        with:
          upload_url: ${{ needs.job_create_release.outputs.upload_url }}
          asset_path: ./build/default/windows_installer/xmq-windows-release.msi
